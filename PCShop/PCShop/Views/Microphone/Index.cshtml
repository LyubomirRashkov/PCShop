@model AllMicrophonesQueryModel

@{
	ViewData["Title"] = "Microphones";
}

<h1 class="text-center mb-2">@ViewData["Title"]</h1>

<hr />

<partial name="_IndexButtonsPartial" model="@Model.Microphones" />

<br />

<form method="get">
	<div class="row">
		<div class="form-group col-md-3">
			<div class="form-group">
				<label asp-for="Keyword">Search by a keyword</label>
				<input asp-for="Keyword" class="form-control" placeholder="...">
			</div>
		</div>

		<div class="form-group col-md-3">
			<div class="form-group">
				<label asp-for="Sorting">Sort by</label>
				<select asp-for="Sorting" class="form-control">
					<option value="0">Newest</option>
					<option value="1">Brand</option>
					<option value="2">Price(from min to max)</option>
					<option value="3">Price(from max to min)</option>
				</select>
			</div>
		</div>
	</div>

	<div class="text-center">
		<div class="form-group mt-4 p-2">
			<input type="submit" value="Search" class="btn btn-success" />
		</div>
	</div>
</form>

@if (!Model.Microphones.Any())
{
	<h3 class="text-center mt-5">No microphones found by the given criteria!</h3>
}
else
{
	if (Model.TotalProductsCount == 1)
	{
		<h4 class="text-center mt-4">@Model.TotalProductsCount microphone found by the given criteria!</h4>
	}
	else
	{
		<h4 class="text-center mt-4">@Model.TotalProductsCount microphones found by the given criteria!</h4>
	}

	<div class="row">
		<partial name="_MicrophonesIndexTablePartial" model="@Model.Microphones" />
	</div>

	var previousPage = Model.CurrentPage - 1;

	if (previousPage < 1)
	{
		previousPage = 1;
	}

	var maxPage = Math.Ceiling((double)Model.TotalProductsCount / ProductsPerPage);

	<div class="row mt-3">
		<div class="col-md-6 d-grid gap-2 d-md-flex justify-content-md-start">
			<a class="btn btn-warning @(Model.CurrentPage == 1 ? "disabled" : string.Empty)"
		   asp-controller="Microphone"
		   asp-action="Index"
		   asp-route-currentPage="@previousPage"
		   asp-route-keyWord="@Model.Keyword"
		   asp-route-sorting="@((int)Model.Sorting)">Prev</a>
		</div>

		@{
			var shouldButtonBeDisabled = Model.CurrentPage == maxPage || !Model.Microphones.Any();
		}

		<div class="col-md-6 d-grid gap-2 d-md-flex justify-content-md-end">
			<a class="btn btn-warning @(shouldButtonBeDisabled ? "disabled" : string.Empty)"
		   asp-controller="Microphone"
		   asp-action="Index"
		   asp-route-currentPage="@(Model.CurrentPage + 1)"
		   asp-route-keyWord="@Model.Keyword"
		   asp-route-sorting="@((int)Model.Sorting)">Next</a>
		</div>
	</div>

	<div>
		<h6 class="text-center">Page @Model.CurrentPage / @maxPage</h6>
	</div>
}
