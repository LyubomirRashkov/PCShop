<?xml version="1.0"?>
<doc>
    <assembly>
        <name>PCShop.Core</name>
    </assembly>
    <members>
        <member name="T:PCShop.Core.Constants.Constant">
            <summary>
            Class holding constants
            </summary>
        </member>
        <member name="T:PCShop.Core.Constants.Constant.UserConstants">
            <summary>
            Class holding User constants
            </summary>
        </member>
        <member name="F:PCShop.Core.Constants.Constant.UserConstants.FirstNameMinLength">
            <summary>
            Constant for the min length of user's first name
            </summary>
        </member>
        <member name="F:PCShop.Core.Constants.Constant.UserConstants.LastNameMinLength">
            <summary>
            Constant for the min length of user's last name
            </summary>
        </member>
        <member name="F:PCShop.Core.Constants.Constant.UserConstants.UsernameMinLength">
            <summary>
            Constant for the min length of user's username
            </summary>
        </member>
        <member name="F:PCShop.Core.Constants.Constant.UserConstants.EmailMinLength">
            <summary>
            Constant for the min length of user's email
            </summary>
        </member>
        <member name="F:PCShop.Core.Constants.Constant.UserConstants.PasswordMinLength">
            <summary>
            Constant for the min length of user's password
            </summary>
        </member>
        <member name="F:PCShop.Core.Constants.Constant.UserConstants.PasswordMaxLength">
            <summary>
            Constant for the max length of user's password
            </summary>
        </member>
        <member name="T:PCShop.Core.Constants.Constant.BrandConstants">
            <summary>
            Class holding Brand constants
            </summary>
        </member>
        <member name="F:PCShop.Core.Constants.Constant.BrandConstants.BrandNameMinLength">
            <summary>
            Constant for the min length of brand's name
            </summary>
        </member>
        <member name="T:PCShop.Core.Constants.Constant.ColorConstants">
            <summary>
            Class holding Color constants
            </summary>
        </member>
        <member name="F:PCShop.Core.Constants.Constant.ColorConstants.ColorNameMinLength">
            <summary>
            Constant for the min length of color's name
            </summary>
        </member>
        <member name="T:PCShop.Core.Constants.Constant.CPUConstants">
            <summary>
            Class holding CPU constants
            </summary>
        </member>
        <member name="F:PCShop.Core.Constants.Constant.CPUConstants.CPUNameMinLength">
            <summary>
            Constant for the min length of CPU's name
            </summary>
        </member>
        <member name="T:PCShop.Core.Constants.Constant.DisplayCoverageConstants">
            <summary>
            Class holding DisplayCoverage constants
            </summary>
        </member>
        <member name="F:PCShop.Core.Constants.Constant.DisplayCoverageConstants.DisplayCoverageNameMinLength">
            <summary>
            Constant for the min length of displayCoverage's name
            </summary>
        </member>
        <member name="T:PCShop.Core.Constants.Constant.DisplayTechnologyConstants">
            <summary>
            Class holding DisplayTechnology constants
            </summary>
        </member>
        <member name="F:PCShop.Core.Constants.Constant.DisplayTechnologyConstants.DisplayTechnologyNameMinLength">
            <summary>
            Constant for the min length of displayTechnology's name
            </summary>
        </member>
        <member name="T:PCShop.Core.Constants.Constant.FormatConstants">
            <summary>
            Class holding Format constants
            </summary>
        </member>
        <member name="F:PCShop.Core.Constants.Constant.FormatConstants.FormatNameMinLength">
            <summary>
            Constant for the min length of format's name
            </summary>
        </member>
        <member name="T:PCShop.Core.Constants.Constant.ResolutionConstants">
            <summary>
            Class holding Resolution constants
            </summary>
        </member>
        <member name="F:PCShop.Core.Constants.Constant.ResolutionConstants.ResolutionValueMinLength">
            <summary>
            Constant for the min length of resolution's value string
            </summary>
        </member>
        <member name="T:PCShop.Core.Constants.Constant.SensitivityConstants">
            <summary>
            Class holding Sensitivity constants
            </summary>
        </member>
        <member name="F:PCShop.Core.Constants.Constant.SensitivityConstants.SensitivityRangeMinLength">
            <summary>
            Constant for the min length of sensitivity's range string
            </summary>
        </member>
        <member name="T:PCShop.Core.Constants.Constant.TypeConstants">
            <summary>
            Class holding Type constants
            </summary>
        </member>
        <member name="F:PCShop.Core.Constants.Constant.TypeConstants.TypeNameMinLength">
            <summary>
            Constant for the min length of type's name
            </summary>
        </member>
        <member name="T:PCShop.Core.Constants.Constant.VideoCardConstants">
            <summary>
            Class holding VideoCard constants
            </summary>
        </member>
        <member name="F:PCShop.Core.Constants.Constant.VideoCardConstants.VideoCardNameMinLength">
            <summary>
            Constant for the min length of videoCard's name
            </summary>
        </member>
        <member name="T:PCShop.Core.Constants.Constant.LaptopConstants">
            <summary>
            Class holding Laptop constants
            </summary>
        </member>
        <member name="F:PCShop.Core.Constants.Constant.LaptopConstants.RAMMinValue">
            <summary>
            Constant for the min value of laptop's RAM
            </summary>
        </member>
        <member name="F:PCShop.Core.Constants.Constant.LaptopConstants.RAMMaxValue">
            <summary>
            Constant for the max value of laptop's RAM
            </summary>
        </member>
        <member name="F:PCShop.Core.Constants.Constant.LaptopConstants.SSDCapacityMinValue">
            <summary>
            Constant for the min value of laptop's SSD capacity
            </summary>
        </member>
        <member name="F:PCShop.Core.Constants.Constant.LaptopConstants.SSDCapacityMaxValue">
            <summary>
            Constant for the max value of laptop's SSD capacity
            </summary>
        </member>
        <member name="F:PCShop.Core.Constants.Constant.LaptopConstants.ErrorMessageForInvalidLaptopId">
            <summary>
            Constant for the error message of invalid Laptop unique identifier
            </summary>
        </member>
        <member name="T:PCShop.Core.Constants.Constant.ProductConstants">
            <summary>
            Class holding constants for all product types
            </summary>
        </member>
        <member name="F:PCShop.Core.Constants.Constant.ProductConstants.QuantityMinValue">
            <summary>
            Constant for the min value of product's quantity
            </summary>
        </member>
        <member name="F:PCShop.Core.Constants.Constant.ProductConstants.QuantityMaxValue">
            <summary>
            Constant for the max value of product's quantity
            </summary>
        </member>
        <member name="F:PCShop.Core.Constants.Constant.ProductConstants.WarrantyMinValue">
            <summary>
            Constant for the min value of product's warranty
            </summary>
        </member>
        <member name="F:PCShop.Core.Constants.Constant.ProductConstants.WarrantyMaxValue">
            <summary>
            Constant for the max value of product's warranty
            </summary>
        </member>
        <member name="F:PCShop.Core.Constants.Constant.ProductConstants.IntegerErrorMessage">
            <summary>
            Constant for the error message of product's integer property
            </summary>
        </member>
        <member name="F:PCShop.Core.Constants.Constant.ProductConstants.ErrorMessageForDeletedProduct">
            <summary>
            Constant for the error message of a deleted product
            </summary>
        </member>
        <member name="F:PCShop.Core.Constants.Constant.ProductConstants.ErrorMessageForProductThatIsOutOfStock">
            <summary>
            Constant for the error message of a product that is out of stock
            </summary>
        </member>
        <member name="T:PCShop.Core.Constants.Constant.ClientConstants">
            <summary>
            Class holding Client constants
            </summary>
        </member>
        <member name="F:PCShop.Core.Constants.Constant.ClientConstants.MaxNumberOfAllowedSales">
            <summary>
            Constant for the max number of allowed active sales
            </summary>
        </member>
        <member name="F:PCShop.Core.Constants.Constant.ClientConstants.ErrorMessageForInvalidUserId">
            <summary>
            Constant for the error message of invalid User unique identifier
            </summary>
        </member>
        <member name="F:PCShop.Core.Constants.Constant.ClientConstants.RequiredNumberOfPurchasesToBeSuperUser">
            <summary>
            Constant for the required number of purchases a client must make to become a SuperUser
            </summary>
        </member>
        <member name="T:PCShop.Core.Constants.Sorting">
            <summary>
            An enumeration of product sortings
            </summary>
        </member>
        <member name="F:PCShop.Core.Constants.Sorting.Newest">
            <summary>
            Enum value for sorting by the date of addition
            </summary>
        </member>
        <member name="F:PCShop.Core.Constants.Sorting.Brand">
            <summary>
            Enum value for sorting by the brand name
            </summary>
        </member>
        <member name="F:PCShop.Core.Constants.Sorting.PriceMinToMax">
            <summary>
            Enum value for sorting by price (min first, max last)
            </summary>
        </member>
        <member name="F:PCShop.Core.Constants.Sorting.PriceMaxToMin">
            <summary>
            Enum value for sorting by price (max first, min last)
            </summary>
        </member>
        <member name="T:PCShop.Core.Exceptions.Guard">
            <summary>
            Guard model
            </summary>
        </member>
        <member name="M:PCShop.Core.Exceptions.Guard.AgainstClientThatDoesNotExist``1(``0,System.String)">
            <summary>
            Method that will throw a PCShopException when the given value is null
            </summary>
            <typeparam name="T">Type of the value</typeparam>
            <param name="value">The value that will be checked for null</param>
            <param name="errorMessage">The error message that will be attached to the PCShopException</param>
        </member>
        <member name="M:PCShop.Core.Exceptions.Guard.AgainstNullOrEmptyCollection``1(System.Collections.Generic.IEnumerable{``0},System.String)">
            <summary>
            Method that will throw an ArgumentException when the given collection is null or empty
            </summary>
            <typeparam name="T">Type of the elements in the collection</typeparam>
            <param name="collection">The collection that will be checked</param>
            <param name="errorMessage">The error message that will be attached to the ArgumentException</param>
        </member>
        <member name="M:PCShop.Core.Exceptions.Guard.AgainstProductThatIsNull``1(``0,System.String)">
            <summary>
            Method that will throw an ArgumentException when the given value is null
            </summary>
            <typeparam name="T">Type of the value</typeparam>
            <param name="value">The value that will be checked for null</param>
            <param name="errorMessage">The error message that will be attached to the ArgumentException</param>
        </member>
        <member name="M:PCShop.Core.Exceptions.Guard.AgainstProductThatIsDeleted(System.Boolean,System.String)">
            <summary>
            Method that will throw an ArgumentException when the given boolean is true
            </summary>
            <param name="isDeleted">The boolean that will be checked</param>
            <param name="errorMessage">The error message that will be attached to the ArgumentException</param>
        </member>
        <member name="M:PCShop.Core.Exceptions.Guard.AgainstProductThatIsOutOfStock(System.Int32,System.String)">
            <summary>
            Method that will throw an ArgumentException when the given quantity is zero
            </summary>
            <param name="quantity">The quantity that will be checked</param>
            <param name="errorMessage">The error message that will be attached to the ArgumentException</param>
        </member>
        <member name="T:PCShop.Core.Exceptions.IGuard">
            <summary>
            Abstraction of Guard
            </summary>
        </member>
        <member name="M:PCShop.Core.Exceptions.IGuard.AgainstClientThatDoesNotExist``1(``0,System.String)">
            <summary>
            Method that will throw a PCShopException when the given value is null
            </summary>
            <typeparam name="T">Type of the value</typeparam>
            <param name="value">The value that will be checked for null</param>
            <param name="errorMessage">The error message that will be attached to the PCShopException</param>
        </member>
        <member name="M:PCShop.Core.Exceptions.IGuard.AgainstNullOrEmptyCollection``1(System.Collections.Generic.IEnumerable{``0},System.String)">
            <summary>
            Method that will throw an ArgumentException when the given collection is null or empty
            </summary>
            <typeparam name="T">Type of the elements in the collection</typeparam>
            <param name="collection">The collection that will be checked</param>
            <param name="errorMessage">The error message that will be attached to the ArgumentException</param>
        </member>
        <member name="M:PCShop.Core.Exceptions.IGuard.AgainstProductThatIsDeleted(System.Boolean,System.String)">
            <summary>
            Method that will throw an ArgumentException when the given boolean is true
            </summary>
            <param name="isDeleted">The boolean that will be checked</param>
            <param name="errorMessage">The error message that will be attached to the ArgumentException</param>
        </member>
        <member name="M:PCShop.Core.Exceptions.IGuard.AgainstProductThatIsOutOfStock(System.Int32,System.String)">
            <summary>
            Method that will throw an ArgumentException when the given quantity is zero
            </summary>
            <param name="quantity">The quantity that will be checked</param>
            <param name="errorMessage">The error message that will be attached to the ArgumentException</param>
        </member>
        <member name="M:PCShop.Core.Exceptions.IGuard.AgainstProductThatIsNull``1(``0,System.String)">
            <summary>
            Method that will throw an ArgumentException when the given value is null
            </summary>
            <typeparam name="T">Type of the value</typeparam>
            <param name="value">The value that will be checked for null</param>
            <param name="errorMessage">The error message that will be attached to the ArgumentException</param>
        </member>
        <member name="T:PCShop.Core.Exceptions.PCShopException">
            <summary>
            PCShopException model
            </summary>
        </member>
        <member name="M:PCShop.Core.Exceptions.PCShopException.#ctor">
            <summary>
            Constructor of PCShopException class
            </summary>
        </member>
        <member name="M:PCShop.Core.Exceptions.PCShopException.#ctor(System.String)">
            <summary>
            Constructor of PCShopException class
            </summary>
            <param name="errorMessage">The error message that will be attached to the exception</param>
        </member>
        <member name="T:PCShop.Core.Models.Laptop.LaptopDetailsExportViewModel">
            <summary>
            LaptopDetailsExportViewModel model
            </summary>
        </member>
        <member name="P:PCShop.Core.Models.Laptop.LaptopDetailsExportViewModel.Type">
            <summary>
            Property that represents laptop type
            </summary>
        </member>
        <member name="P:PCShop.Core.Models.Laptop.LaptopDetailsExportViewModel.DisplayCoverage">
            <summary>
            Property that represents laptop display coverage
            </summary>
        </member>
        <member name="P:PCShop.Core.Models.Laptop.LaptopDetailsExportViewModel.DisplayTechnology">
            <summary>
            Property that represents laptop display technology
            </summary>
        </member>
        <member name="P:PCShop.Core.Models.Laptop.LaptopDetailsExportViewModel.Resolution">
            <summary>
            Property that represents laptop display resolution
            </summary>
        </member>
        <member name="P:PCShop.Core.Models.Laptop.LaptopDetailsExportViewModel.Color">
            <summary>
            Property that represents laptop color
            </summary>
        </member>
        <member name="P:PCShop.Core.Models.Laptop.LaptopDetailsExportViewModel.ImageUrl">
            <summary>
            Property that represents laptop image url
            </summary>
        </member>
        <member name="P:PCShop.Core.Models.Laptop.LaptopDetailsExportViewModel.AddedOn">
            <summary>
            Property that represents the date the laptop was added to the database
            </summary>
        </member>
        <member name="P:PCShop.Core.Models.Laptop.LaptopDetailsExportViewModel.Quantity">
            <summary>
            Property that represents how many laptops are in stock
            </summary>
        </member>
        <member name="P:PCShop.Core.Models.Laptop.LaptopDetailsExportViewModel.Seller">
            <summary>
            Property that represents laptop Seller
            </summary>
        </member>
        <member name="P:PCShop.Core.Models.Laptop.LaptopDetailsExportViewModel.SellerFirstName">
            <summary>
            Property that represents laptop seller first name
            </summary>
        </member>
        <member name="P:PCShop.Core.Models.Laptop.LaptopDetailsExportViewModel.SellerLastName">
            <summary>
            Property that represents laptop seller last name
            </summary>
        </member>
        <member name="T:PCShop.Core.Models.Laptop.LaptopEditViewModel">
            <summary>
            LaptopEditViewModel model
            </summary>
        </member>
        <member name="P:PCShop.Core.Models.Laptop.LaptopEditViewModel.Id">
            <summary>
            Property that represents laptop unique identifier
            </summary>
        </member>
        <member name="P:PCShop.Core.Models.Laptop.LaptopEditViewModel.Seller">
            <summary>
            Property that represents laptop Seller
            </summary>
        </member>
        <member name="T:PCShop.Core.Models.Laptop.LaptopExportViewModel">
            <summary>
            LaptopExportViewModel model
            </summary>
        </member>
        <member name="P:PCShop.Core.Models.Laptop.LaptopExportViewModel.Id">
            <summary>
            Property that represents laptop unique identifier
            </summary>
        </member>
        <member name="P:PCShop.Core.Models.Laptop.LaptopExportViewModel.Brand">
            <summary>
            Property that represents laptop brand
            </summary>
        </member>
        <member name="P:PCShop.Core.Models.Laptop.LaptopExportViewModel.CPU">
            <summary>
            Property that represents laptop CPU
            </summary>
        </member>
        <member name="P:PCShop.Core.Models.Laptop.LaptopExportViewModel.RAM">
            <summary>
            Property that represents laptop RAM
            </summary>
        </member>
        <member name="P:PCShop.Core.Models.Laptop.LaptopExportViewModel.SSDCapacity">
            <summary>
            Property that represents laptop SSD capacity
            </summary>
        </member>
        <member name="P:PCShop.Core.Models.Laptop.LaptopExportViewModel.VideoCard">
            <summary>
            Property that represents laptop video card
            </summary>
        </member>
        <member name="P:PCShop.Core.Models.Laptop.LaptopExportViewModel.Price">
            <summary>
            Property that represents laptop price
            </summary>
        </member>
        <member name="P:PCShop.Core.Models.Laptop.LaptopExportViewModel.DisplaySize">
            <summary>
            Property that represents laptop display size
            </summary>
        </member>
        <member name="P:PCShop.Core.Models.Laptop.LaptopExportViewModel.Warranty">
            <summary>
            Property that represents laptop warranty
            </summary>
        </member>
        <member name="T:PCShop.Core.Models.Laptop.LaptopImportViewModel">
            <summary>
            LaptopImportViewModel model
            </summary>
        </member>
        <member name="P:PCShop.Core.Models.Laptop.LaptopImportViewModel.Brand">
            <summary>
            Property that represents laptop brand
            </summary>
        </member>
        <member name="P:PCShop.Core.Models.Laptop.LaptopImportViewModel.CPU">
            <summary>
            Property that represents laptop CPU
            </summary>
        </member>
        <member name="P:PCShop.Core.Models.Laptop.LaptopImportViewModel.RAM">
            <summary>
            Property that represents laptop RAM
            </summary>
        </member>
        <member name="P:PCShop.Core.Models.Laptop.LaptopImportViewModel.SSDCapacity">
            <summary>
            Property that represents laptop SSD capacity
            </summary>
        </member>
        <member name="P:PCShop.Core.Models.Laptop.LaptopImportViewModel.VideoCard">
            <summary>
            Property that represents laptop video card
            </summary>
        </member>
        <member name="P:PCShop.Core.Models.Laptop.LaptopImportViewModel.DisplaySize">
            <summary>
            Property that represents laptop display size
            </summary>
        </member>
        <member name="P:PCShop.Core.Models.Laptop.LaptopImportViewModel.Type">
            <summary>
            Property that represents laptop type
            </summary>
        </member>
        <member name="P:PCShop.Core.Models.Laptop.LaptopImportViewModel.Quantity">
            <summary>
            Property that represents laptops count
            </summary>
        </member>
        <member name="P:PCShop.Core.Models.Laptop.LaptopImportViewModel.Price">
            <summary>
            Property that represents laptop price
            </summary>
        </member>
        <member name="P:PCShop.Core.Models.Laptop.LaptopImportViewModel.Warranty">
            <summary>
            Property that represents laptop warranty
            </summary>
        </member>
        <member name="P:PCShop.Core.Models.Laptop.LaptopImportViewModel.DisplayCoverage">
            <summary>
            Property that represents laptop display coverage
            </summary>
        </member>
        <member name="P:PCShop.Core.Models.Laptop.LaptopImportViewModel.DisplayTechnology">
            <summary>
            Property that represents laptop display technology
            </summary>
        </member>
        <member name="P:PCShop.Core.Models.Laptop.LaptopImportViewModel.Resolution">
            <summary>
            Property that represents laptop display resolution
            </summary>
        </member>
        <member name="P:PCShop.Core.Models.Laptop.LaptopImportViewModel.Color">
            <summary>
            Property that represents laptop color
            </summary>
        </member>
        <member name="P:PCShop.Core.Models.Laptop.LaptopImportViewModel.ImageUrl">
            <summary>
            Property that represents laptop image url
            </summary>
        </member>
        <member name="T:PCShop.Core.Models.Laptop.LaptopsQueryModel">
            <summary>
            LaptopsQueryModel model
            </summary>
        </member>
        <member name="M:PCShop.Core.Models.Laptop.LaptopsQueryModel.#ctor">
            <summary>
            Constructor of LaptopsQueryModel class
            </summary>
        </member>
        <member name="P:PCShop.Core.Models.Laptop.LaptopsQueryModel.Cpu">
            <summary>
            Property that represents laptop CPU model
            </summary>
        </member>
        <member name="P:PCShop.Core.Models.Laptop.LaptopsQueryModel.Cpus">
            <summary>
            Property that represents a collection of all possible laptop CPU models
            </summary>
        </member>
        <member name="P:PCShop.Core.Models.Laptop.LaptopsQueryModel.Ram">
            <summary>
            Propeerty that represents laptop RAM
            </summary>
        </member>
        <member name="P:PCShop.Core.Models.Laptop.LaptopsQueryModel.Rams">
            <summary>
            Property that represents a collection of all possible laptop RAMs
            </summary>
        </member>
        <member name="P:PCShop.Core.Models.Laptop.LaptopsQueryModel.SsdCapacity">
            <summary>
            Property that represents laptop SSD capacity
            </summary>
        </member>
        <member name="P:PCShop.Core.Models.Laptop.LaptopsQueryModel.SsdCapacities">
            <summary>
            Property that represents all possible laptop SSD capacities
            </summary>
        </member>
        <member name="P:PCShop.Core.Models.Laptop.LaptopsQueryModel.VideoCard">
            <summary>
            Property that represents laptop video card model
            </summary>
        </member>
        <member name="P:PCShop.Core.Models.Laptop.LaptopsQueryModel.VideoCards">
            <summary>
            Property that represents all possible laptop video card models
            </summary>
        </member>
        <member name="P:PCShop.Core.Models.Laptop.LaptopsQueryModel.KeyWord">
            <summary>
            Property that represent a seacrh keyword
            </summary>
        </member>
        <member name="P:PCShop.Core.Models.Laptop.LaptopsQueryModel.Sorting">
            <summary>
            Property that represents a sorting criterion
            </summary>
        </member>
        <member name="P:PCShop.Core.Models.Laptop.LaptopsQueryModel.Laptops">
            <summary>
            Property that represents a collecion of laptops according to specified criteria
            </summary>
        </member>
        <member name="T:PCShop.Core.Models.User.SignInViewModel">
            <summary>
            ViewModel class for sign in
            </summary>
        </member>
        <member name="P:PCShop.Core.Models.User.SignInViewModel.UserName">
            <summary>
            Property that represents user's username
            </summary>
        </member>
        <member name="P:PCShop.Core.Models.User.SignInViewModel.Password">
            <summary>
            Property that represents user's password
            </summary>
        </member>
        <member name="P:PCShop.Core.Models.User.SignInViewModel.ReturnUrl">
            <summary>
            Property that represents user's required url
            </summary>
        </member>
        <member name="T:PCShop.Core.Models.User.SignUpViewModel">
            <summary>
            ViewModel class for sign up
            </summary>
        </member>
        <member name="P:PCShop.Core.Models.User.SignUpViewModel.FirstName">
            <summary>
            Property that represents user's first name
            </summary>
        </member>
        <member name="P:PCShop.Core.Models.User.SignUpViewModel.LastName">
            <summary>
            Property that represents user's last name
            </summary>
        </member>
        <member name="P:PCShop.Core.Models.User.SignUpViewModel.UserName">
            <summary>
            Property that represents user's username
            </summary>
        </member>
        <member name="P:PCShop.Core.Models.User.SignUpViewModel.Email">
            <summary>
            Property that represents user's email
            </summary>
        </member>
        <member name="P:PCShop.Core.Models.User.SignUpViewModel.Password">
            <summary>
            Property that represents user's password
            </summary>
        </member>
        <member name="P:PCShop.Core.Models.User.SignUpViewModel.ConfirmPassword">
            <summary>
            Property for password confirmation
            </summary>
        </member>
        <member name="T:PCShop.Core.Services.Implementations.ClientService">
            <summary>
            Implementation of IClientService interface
            </summary>
        </member>
        <member name="M:PCShop.Core.Services.Implementations.ClientService.#ctor(PCShop.Infrastructure.Common.IRepository,PCShop.Core.Exceptions.IGuard)">
            <summary>
            Constructor of ClientService class
            </summary>
            <param name="repository">The repository that will be used</param>
            <param name="guard">The guard that will be used</param>
        </member>
        <member name="M:PCShop.Core.Services.Implementations.ClientService.BuyProduct(System.String)">
            <summary>
            Method to buy a product
            </summary>
            <param name="userId">User unique identifier</param>
            <returns>The client who purchased the product</returns>
        </member>
        <member name="M:PCShop.Core.Services.Implementations.ClientService.GetNumberOfActiveSales(System.String)">
            <summary>
            Method to retrieve the number of active sales for a given user
            </summary>
            <param name="userId">User unique identifier</param>
            <returns>The number of active sales of the user</returns>
        </member>
        <member name="T:PCShop.Core.Services.Implementations.LaptopService">
            <summary>
            Implementation of ILaptopService interface
            </summary>
        </member>
        <member name="M:PCShop.Core.Services.Implementations.LaptopService.#ctor(PCShop.Infrastructure.Common.IRepository,PCShop.Core.Exceptions.IGuard)">
            <summary>
            Constructor of LaptopService class
            </summary>
            <param name="repository">The repository that will be used</param>
            <param name="guard">The guard that will be used</param>
        </member>
        <member name="M:PCShop.Core.Services.Implementations.LaptopService.AddLaptopAsync(PCShop.Core.Models.Laptop.LaptopImportViewModel,System.String)">
            <summary>
            Method to add a laptop
            </summary>
            <param name="model">Laptop input model</param>
            <param name="userId">Laptop's owner unique identifier</param>
            <returns>The unique identifier of the added laptop</returns>
        </member>
        <member name="M:PCShop.Core.Services.Implementations.LaptopService.DeleteLaptopAsync(System.Int32)">
            <summary>
            Method to mark a specific laptop as deleted
            </summary>
            <param name="id">Laptop unique identifier</param>
        </member>
        <member name="M:PCShop.Core.Services.Implementations.LaptopService.EditLaptopAsync(PCShop.Core.Models.Laptop.LaptopEditViewModel)">
            <summary>
            Method to edit a laptop
            </summary>
            <param name="model">Laptop input model</param>
            <returns>The unique identifier of the edited laptop</returns>
        </member>
        <member name="M:PCShop.Core.Services.Implementations.LaptopService.GetAllLaptopsAsync(System.String,System.Nullable{System.Int32},System.Nullable{System.Int32},System.String,System.String,PCShop.Core.Constants.Sorting)">
            <summary>
            Method to retrieve all active laptops according to specified criteria
            </summary>
            <param name="cpu">The criterion for the CPU model</param>
            <param name="ram">The criterion for the RAM capacity</param>
            <param name="ssdCapacity">The criterion for the SSD capacity</param>
            <param name="videoCard">The criterion for the video card</param>
            <param name="keyWord">The criterion for key word</param>
            <param name="sorting">The criterion for sorting</param>
            <returns>Collection of LaptopExportViewModels according to specified criteria</returns>
        </member>
        <member name="M:PCShop.Core.Services.Implementations.LaptopService.GetLaptopByIdAsLaptopDetailsExportViewModelAsync(System.Int32)">
            <summary>
            Method to retrieve a specific laptop
            </summary>
            <param name="id">Laptop unique identifier</param>
            <returns>The laptop as LaptopDetailsExportViewModel</returns>
        </member>
        <member name="M:PCShop.Core.Services.Implementations.LaptopService.GetLaptopByIdAsLaptopEditViewModelAsync(System.Int32)">
            <summary>
            Method to retrieve a specific laptop
            </summary>
            <param name="id">Laptop unique identifier</param>
            <returns>The laptop as LaptopEditViewModel</returns>
        </member>
        <member name="M:PCShop.Core.Services.Implementations.LaptopService.GetUserLaptopsAsync(System.String)">
            <summary>
            Method to retrieve all active laptop sales of the currently logged in user
            </summary>
            <param name="userId">User unique identifier</param>
            <returns>Collection of LaptopDetailsExportViewModels</returns>
        </member>
        <member name="M:PCShop.Core.Services.Implementations.LaptopService.MarkLaptopAsBought(System.Int32)">
            <summary>
            Method to mark the laptop with the given unique identifier as bought
            </summary>
            <param name="id">Laptop unique identifier</param>
        </member>
        <member name="M:PCShop.Core.Services.Implementations.LaptopService.GetAllCpusNames">
            <summary>
            Method to retrieve all CPU names
            </summary>
            <returns>Ordered collection of CPU names</returns>
        </member>
        <member name="M:PCShop.Core.Services.Implementations.LaptopService.GetAllRamsValues">
            <summary>
            Method to retrieve all RAM values
            </summary>
            <returns>Ordered collection of RAM values</returns>
        </member>
        <member name="M:PCShop.Core.Services.Implementations.LaptopService.GetAllSsdCapacitiesValues">
            <summary>
            Method to retrieve all SSD capacities
            </summary>
            <returns>Ordered collection of SSD capacities</returns>
        </member>
        <member name="M:PCShop.Core.Services.Implementations.LaptopService.GetAllVideoCardsNames">
            <summary>
            Method to retrieve all video card names
            </summary>
            <returns>Ordered collection of video card names</returns>
        </member>
        <member name="T:PCShop.Core.Services.Interfaces.IClientService">
            <summary>
            Abstraction of ClientService
            </summary>
        </member>
        <member name="M:PCShop.Core.Services.Interfaces.IClientService.GetNumberOfActiveSales(System.String)">
            <summary>
            Method to retrieve the number of active sales for a given user
            </summary>
            <param name="userId">User unique identifier</param>
            <returns>The number of active sales of the user</returns>
        </member>
        <member name="M:PCShop.Core.Services.Interfaces.IClientService.BuyProduct(System.String)">
            <summary>
            Method to buy a product
            </summary>
            <param name="userId">User unique identifier</param>
            <returns>The client who purchased the product</returns>
        </member>
        <member name="T:PCShop.Core.Services.Interfaces.ILaptopService">
            <summary>
            Abstraction of LaptopService
            </summary>
        </member>
        <member name="M:PCShop.Core.Services.Interfaces.ILaptopService.GetAllLaptopsAsync(System.String,System.Nullable{System.Int32},System.Nullable{System.Int32},System.String,System.String,PCShop.Core.Constants.Sorting)">
            <summary>
            Method to retrieve all active laptops according to specified criteria
            </summary>
            <param name="cpu">The criterion for the CPU model</param>
            <param name="ram">The criterion for the RAM capacity</param>
            <param name="ssdCapacity">The criterion for the SSD capacity</param>
            <param name="videoCard">The criterion for the video card</param>
            <param name="keyWord">The criterion for key word</param>
            <param name="sorting">The criterion for sorting</param>
            <returns>Collection of LaptopExportViewModels according to specified criteria</returns>
        </member>
        <member name="M:PCShop.Core.Services.Interfaces.ILaptopService.GetLaptopByIdAsLaptopDetailsExportViewModelAsync(System.Int32)">
            <summary>
            Method to retrieve a specific laptop
            </summary>
            <param name="id">Laptop unique identifier</param>
            <returns>The laptop as LaptopDetailsExportViewModel</returns>
        </member>
        <member name="M:PCShop.Core.Services.Interfaces.ILaptopService.DeleteLaptopAsync(System.Int32)">
            <summary>
            Method to mark a specific laptop as deleted
            </summary>
            <param name="id">Laptop unique identifier</param>
        </member>
        <member name="M:PCShop.Core.Services.Interfaces.ILaptopService.AddLaptopAsync(PCShop.Core.Models.Laptop.LaptopImportViewModel,System.String)">
            <summary>
            Method to add a laptop
            </summary>
            <param name="model">Laptop input model</param>
            <param name="userId">Laptop's owner unique identifier</param>
            <returns>The unique identifier of the added laptop</returns>
        </member>
        <member name="M:PCShop.Core.Services.Interfaces.ILaptopService.GetLaptopByIdAsLaptopEditViewModelAsync(System.Int32)">
            <summary>
            Method to retrieve a specific laptop
            </summary>
            <param name="id">Laptop unique identifier</param>
            <returns>The laptop as LaptopEditViewModel</returns>
        </member>
        <member name="M:PCShop.Core.Services.Interfaces.ILaptopService.EditLaptopAsync(PCShop.Core.Models.Laptop.LaptopEditViewModel)">
            <summary>
            Method to edit a laptop
            </summary>
            <param name="model">Laptop input model</param>
            <returns>The unique identifier of the edited laptop</returns>
        </member>
        <member name="M:PCShop.Core.Services.Interfaces.ILaptopService.GetUserLaptopsAsync(System.String)">
            <summary>
            Method to retrieve all active laptop sales of the currently logged in user
            </summary>
            <param name="userId">User unique identifier</param>
            <returns>Collection of LaptopDetailsExportViewModels</returns>
        </member>
        <member name="M:PCShop.Core.Services.Interfaces.ILaptopService.MarkLaptopAsBought(System.Int32)">
            <summary>
            Method to mark the laptop with the given unique identifier as bought
            </summary>
            <param name="id">Laptop unique identifier</param>
        </member>
        <member name="M:PCShop.Core.Services.Interfaces.ILaptopService.GetAllCpusNames">
            <summary>
            Method to retrieve all CPU names
            </summary>
            <returns>Collection of CPU names</returns>
        </member>
        <member name="M:PCShop.Core.Services.Interfaces.ILaptopService.GetAllRamsValues">
            <summary>
            Method to retrieve all RAM values
            </summary>
            <returns>Collection of RAM values</returns>
        </member>
        <member name="M:PCShop.Core.Services.Interfaces.ILaptopService.GetAllSsdCapacitiesValues">
            <summary>
            Method to retrieve all SSD capacities
            </summary>
            <returns>Collection of SSD capacities</returns>
        </member>
        <member name="M:PCShop.Core.Services.Interfaces.ILaptopService.GetAllVideoCardsNames">
            <summary>
            Method to retrieve all video card names
            </summary>
            <returns>Collection of video card names</returns>
        </member>
    </members>
</doc>
